const mongoose = require('mongoose')
const bcrypt = require('bcryptjs');
const webtoken=require("jsonwebtoken")
let singnup=new mongoose.Schema(
    {
        firstName:{
            type:String,
            required:true
        },
        lastName:{
            type:String,
            required:true
        },
        email:{
            type:String,
            required:true
        },
        password:{
            type:String,
            required:true
        },
        tokens:[
            {
                token:{
                    type:String,
                    required:true
                }
            }
        ]
    }
)
singnup.pre('save', async function(next)
{
    if(this.isModified('password'))
    {
     const hashpassowrd= await bcrypt.hash(this.password,12)
      this.password=hashpassowrd
    }
    next()
})
singnup.methods.generateAuthToken= async function()
{
    try{
        let token=webtoken.sign({_id:this._id},"cat say hello from fasi")
        this.tokens=this.tokens.concat({token:token})
        await this.save()
        return token
    }
    catch(err)
    {

    }
}
let User=mongoose.model('USER',singnup);

module.exports=User;